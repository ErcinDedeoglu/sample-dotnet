apiVersion: v1
kind: ServiceAccount
metadata:
  name: sampleuser
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: serverless
  name: sample
rules:
  - apiGroups: ["", "apps", "batch", "extensions"]
    resources: ["deployments", "services", "replicasets", "pods", "jobs", "cronjobs"]
    resourceNames: ["sample"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sample
  namespace: serverless
subjects:
  - kind: ServiceAccount
    name: sampleuser
    namespace: serverless
roleRef:
  kind: Role
  name: sample
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sample-config
  namespace: serverless
data:
  EnableJobs: "true"
  HttpsRedirection: "false"
  AuthBaseUrl: "https://primeapps-auth-service-test.primeapps.svc.cluster.local/"
  Sample_ApiBaseUrl: "https://primeapps-app-service-test.primeapps.svc.cluster.local/api/"
  Sample_ClientId: "sample-integration"
  Sample_ClientId_Auth: "sample"
  Sample_ClientSecret: "secret"
  Sample_AppSecret: "257729927aaa45f09d54797ee5dbc111"
  Sample_AppId: "100"
  Sample_Username: "admin@sample.com"
  Sample_Password: "123456"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sample
  namespace: serverless
  labels:
    k8s-app: "sample"
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: "sample"
  template:
    metadata:
      labels:
        k8s-app: "sample"
    spec:
      imagePullSecrets:
        - name: primeapps-registry
      containers:
        - name: sample
          image: registry.primeapps.io/sampleuser/sample:1.0.0
          env:
            - name: AppSettings__RedisConnection
              valueFrom:
                secretKeyRef:
                  name: primeapps-serverless
                  key: RedisConnection
            - name: AppSettings__EnableJobs
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: EnableJobs
            - name: AppSettings__HttpsRedirection
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: HttpsRedirection
            - name: AppSettings__AuthBaseUrl
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: AuthBaseUrl
            - name: AppSettings__Sample_ApiBaseUrl
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_ApiBaseUrl
            - name: AppSettings__Sample_ClientId
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_ClientId
            - name: AppSettings__Sample_ClientId_Auth
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_ClientId_Auth
            - name: AppSettings__Sample_ClientSecret
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_ClientSecret
            - name: AppSettings__Sample_AppSecret
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_AppSecret
            - name: AppSettings__Sample_AppId
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_AppId
            - name: AppSettings__Sample_Username
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_Username
            - name: AppSettings__Sample_Password
              valueFrom:
                configMapKeyRef:
                  name: sample-config
                  key: Sample_Password
---
kind: Service
apiVersion: v1
metadata:
  name: sample-service
  namespace: serverless
spec:
  type: "ClusterIP"
  selector:
    k8s-app: "sample"
  ports:
    - name: "http"
      protocol: TCP
      port: 80
      targetPort: 80
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: sample-ingress
  namespace: serverless
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-snippet: |-
      add_header X-Robots-Tag "noindex, nofollow";
spec:
  tls:
    - hosts:
        - sample.primeapps.io
      secretName: primeapps-wildcard-ssl
  rules:
    - host: sample.primeapps.io
      http:
        paths:
          - path: "/"
            backend:
              serviceName: sample-service
              servicePort: 80
